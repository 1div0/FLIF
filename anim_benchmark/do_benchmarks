#!/bin/bash


FLIF="../flif"
PREFIX="output_data/result"
INPUTPREFIX="input/"
OUTPUTPREFIX="output/"

DO_FLIF="yes"
DO_FLIF_NI="yes"
# make sure convert, apngdis, apngasm, gif2apng are available
# and bc and time

CHECK_DECODE="yes"
TIMER="/usr/bin/time -o tmp/tmp.timing -f %U"

mkdir -p $(dirname $PREFIX)
mkdir -p tmp

function check {
        one=$1*.png
        for c in $one
        do
                  echo -n "$c vs $2 : "
                  if cmp $c $2
                  then
                  echo "OK-cmp (identical decoded files)"
                  else
                    if [[ $(compare -metric mepp $c $2 null: 2>&1) == "0 (0, 0)" ]]
                    then
                      echo "OK-compare (identical decoded images)"
                    else
                      echo PROBLEM IN FILE $B
                      return 1
                    fi
                  fi
                shift
        done
        return 0
}




for c in $INPUTPREFIX/*
do
    TYPE=$(basename $c)
    OUTDIR=$OUTPUTPREFIX/$TYPE/
    mkdir -p $OUTDIR
    mkdir -p $OUTDIR/apng
    mkdir -p $OUTDIR/gif
    mkdir -p $OUTDIR/flif
    mkdir -p $OUTDIR/flif-ni
    for f in $c/*.gif
    do
                B=$(basename $f .gif)
                if [[ -e $c/$B.png ]]
                then
                   echo "Already converted $f"
                else
                   gif2apng $f $c/$B.png
                fi
    done
    for f in $c/*.png
    do
                B=$(basename $f .png)
                echo "Category: $TYPE =========================================================== Image $B"
                cp $f tmp/tmp.png
                rm tmp/tmp-frame*
                apngdis tmp/tmp.png tmp-frame
                convert $f -depth 8 tmp/tmp.pnm
                IMAGESIZE=$(head -n 2 tmp/tmp.pnm | tail -n 1)

                $TIMER apngasm $OUTDIR/apng/$B.png tmp/tmp-frame*.png
                TIME=$(cat tmp/tmp.timing)
                STIME=$TIME
                cp $OUTDIR/apng/$B.png tmp/tmp.png
                $TIMER apngdis tmp/tmp.png tmp_decoded-frame
                TIMED=$(cat tmp/tmp.timing)
                STIMED=$TIMED
                SIZE=$(stat -c %s $OUTDIR/apng/$B.png 2>&1)
                SSIZE=$SIZE
                RAT=$(echo $SIZE/$SSIZE |bc -l)
                echo "$RAT $SSIZE $STIME $STIMED $B $TYPE $IMAGESIZE $SIZE $TIME $TIMED" >> $PREFIX.APNG.$TYPE
                SIZE=$(stat -c %s $f 2>&1)
                RAT=$(echo $SIZE/$SSIZE |bc -l)
                echo "$RAT $SSIZE $STIME $STIMED $B $TYPE $IMAGESIZE $SIZE $TIME $TIMED" >> $PREFIX.APNG-orig.$TYPE

                if [[ "$DO_FLIF" == "yes" ]]
                then
                OUTFILE=$OUTDIR/flif/$B.flif
                $TIMER $FLIF -vv tmp/tmp-frame*.png $OUTFILE
                TIME=$(cat tmp/tmp.timing)
                SIZE=$(stat -c %s $OUTFILE 2>&1)
                RAT=$(echo $SIZE/$SSIZE |bc -l)
                if [[ "$CHECK_DECODE" == "yes" ]]
                then
                  rm tmp/tmp_flif-decoded*
                  $TIMER $FLIF -d $OUTFILE tmp/tmp_flif-decoded.png
                  TIMED=$(cat tmp/tmp.timing)
                  if check tmp/tmp-frame tmp/tmp_flif-decoded*.png
                  then
                      echo "OK"
                  else
                      echo PROBLEM IN FILE $B
                      exit
                  fi
                else
                  TIMED=unknown
                fi
                echo "$RAT $SSIZE $STIME $STIMED $B $TYPE $IMAGESIZE $SIZE $TIME $TIMED" >> $PREFIX.FLIF.$TYPE
                fi
                if [[ "$DO_FLIF_NI" == "yes" ]]
                then
                OUTFILE=$OUTDIR/flif-ni/$B.flif
                $TIMER $FLIF -vvn tmp/tmp-frame*.png $OUTFILE
                TIME=$(cat tmp/tmp.timing)
                SIZE=$(stat -c %s $OUTFILE 2>&1)
                RAT=$(echo $SIZE/$SSIZE |bc -l)
                if [[ "$CHECK_DECODE" == "yes" ]]
                then
                  $TIMER $FLIF -d $OUTFILE tmp/tmp_flif-decoded.png
                  TIMED=$(cat tmp/tmp.timing)
                  if check tmp/tmp-frame tmp/tmp_flif-decoded*.png
                  then
                      echo "OK"
                  else
                      echo PROBLEM IN FILE $B
                      exit
                  fi
                else
                  TIMED=unknown
                fi
                echo "$RAT $SSIZE $STIME $STIMED $B $TYPE $IMAGESIZE $SIZE $TIME $TIMED" >> $PREFIX.FLIF-ni.$TYPE
                fi
      done
done